---
apiVersion: maistra.io/v2
kind: ServiceMeshControlPlane
metadata:
    name: {{ controlplane.name }}
    namespace: {{ controlplane.namespace }}
spec:
    version: {{ controlplane.version }}
    general:
        logging:
            componentLevels: {}  
            logAsJSON: true
        validationMessages: true
    proxy:
        accessLogging:
            file:
                name: /dev/stdout
        runtime:
            container:
                resources:
                    requests:
                        cpu: 50m
                        memory: 50Mi

    security:
        dataPlane:
            mtls: true
            automtls: true
        controlPlane:
            mtls: true
        jwksResolverCA: >-
            -----BEGIN CERTIFICATE-----
            MIIDDDCCAfSgAwIBAgIBATANBgkqhkiG9w0BAQsFADAmMSQwIgYDVQQDDBtpbmdy
            ZXNzLW9wZXJhdG9yQDE2Nzk1NTI4NjAwHhcNMjMwMzIzMDYyNzQwWhcNMjUwMzIy
            MDYyNzQxWjAmMSQwIgYDVQQDDBtpbmdyZXNzLW9wZXJhdG9yQDE2Nzk1NTI4NjAw
            ggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCv48ucT1SXYqfpg7qM1Ofu
            Vx+y5SjjCwboaSS3EAZ5Wf9imD5ctrTUBTF/SioENYXT6WLXtZFEMn6oR1MsD3tC
            2Lib1MlGq1ffCXttsOVf2F6cGDe/5yQEQxB3lJ8b9cp6OL5w07Dvka/GE5B4NgaC
            76G2shzF3T0atsUrfKOF35ewfgGK+LBMvqKwScENq8e+fv2R+GZTq4aRZzQ8By9A
            suq3EW12VOcX8B0ePWm1K2CZV8+/uBG4bpUnMJLdG8bSNVRYyfGgO1n1m8AcZXkY
            lvOaf3yZHaJBJH9R+tfJEULafJXIXDPgPcph/SslkyHiovUVMB4AcLYZo1vj1gLr
            AgMBAAGjRTBDMA4GA1UdDwEB/wQEAwICpDASBgNVHRMBAf8ECDAGAQH/AgEAMB0G
            A1UdDgQWBBQtRw6uKpRlxH2STkibnYdg29tHhjANBgkqhkiG9w0BAQsFAAOCAQEA
            H+FjXjOEbxb7+cYTML6NWvI7/vt25lBOfKSkvUzFvqYhKfKR1Zoo5Y0UfK4LATOZ
            kjqe8/HGAAUUrZPy1R7eP9hwMiWG0aBcLAwP02vlYZdbiNzSKNm+4CsgjpIE49x8
            lD5ZEG+xioNsP5uD83zqz1W2O0kjkppEbL3McoX+LHKFbTXq4C2zdfwOolQqDVEB
            B5kerkeglM97MtUKG4n0kItGufSWdvFixHCtsRBSukBVV8HkVRHUaH1SMy5IWAEh
            8gsN/fwoixTTNFEdHX4Op0bu4fSaKmPTNMmqN2Gu6MixWARBMKSigSnMOhVQXdKb
            hTje9z/OjnMPUwzqN5P+jQ== -----END CERTIFICATE-----

    runtime:
        components:
            grafana:
                container:
                    resources:
                        requests:
                            cpu: 100m
                            memory: 256Mi
            prometheus:
                container:
                    resources:
                        requests:
                            cpu: 100m
                            memory: 256Mi    
            kiali:
                container:
                    resources:
                        requests:
                            cpu: 100m
                            memory: 256Mi
                            
            tracing.jaeger.elasticsearch:
                container:
                    resources:
                        requests:
                            cpu: '1'
                            memory: 4Gi
                        limits:
                            cpu: '1'
                            memory: 4Gi

            tracing.jaeger.collector:
                container:
                    resources:
                        requests:
                            cpu: 100m
                            memory: 256Mi

            tracing.jaeger.query:
                container:
                    resources:
                        requests:
                            cpu: 100m
                            memory: 256Mi

    gateways:
        enabled: true
        ingress:
            enabled: true
            ingress: true
            sds:
                enabled: true
                #Runtime configuration for sds sidecar
                runtime: {}
            # namespace: ""
            service:
                metadata:
                    name: istio-ingressgateway
                    labels:
                        istio: ingressgateway
                        app: istio-ingressgateway
                spec:
                    selector:
                        app: istio-ingressgateway
                        istio: ingressgateway
                    type: LoadBalancer
                    ports:
                        - name: status-port
                          protocol: TCP
                          port: 15021
                          targetPort: 15021
                        - name: http2
                          protocol: TCP
                          port: 80
                          targetPort: 8080
                        - name: https
                          protocol: TCP
                          port: 443
                          targetPort: 8443                    
            routerMode: "sni-dnat" 
            volumes: [] 
            runtime:
                #Deployment specific overrides
                deployment:
                    replicas: 3
                    autoScaling:
                        maxReplicas: 10
                        minReplicas: 3
                        targetCPUUtilizationPercentage: 75
                    strategy: {} #The deployment strategy to use to replace existing pods with new ones.
                pod: {} #Pod specific overrides
                container: {} #Container specific overrides
            
            routeConfig:
                enabled: false
        egress:
            enabled: true
            routerMode: "standard"
            volumes: [] 
            runtime:
                deployment:
                    replicas: 3
                    autoScaling:
                        maxReplicas: 10
                        minReplicas: 3
                        targetCPUUtilizationPercentage: 75
                    strategy: {} #The deployment strategy to use to replace existing pods with new ones.
                pod: {} #Pod specific overrides
                container: {} #Container specific overrides        
        openshiftRoute:
            enabled: false
    tracing:
        type: Jaeger
    
    addons:
        jaeger:
            name: jaeger
            install:
                ingress:
                    enabled: true
                    metadata:
                        annotations: {}
                        labels: {}
                storage:
                    type: Elasticsearch
                    elasticsearch:
                        indexCleaner:
                            enabled: true
                            numberOfDays: 2
                            schedule: "55 23 * * *"
                        nodeCount: 3
                        redundancyPolicy: "SingleRedundancy"
                        storage:
                            storageClassName: gp2-csi
                            size: 50Gi

        grafana:
            enabled: true
            install: {}

        kiali:
            name: kiali
            enabled: true
            install:
                dashboard:
                    enableGrafana: true
                    enablePromethues: true
                    enableTracing: true
                deployment: {}
                service:
                    ingress:
                        enabled: true
                        contextPath: "/dashboards/kiali"

        prometheus:
            enabled: true
...
