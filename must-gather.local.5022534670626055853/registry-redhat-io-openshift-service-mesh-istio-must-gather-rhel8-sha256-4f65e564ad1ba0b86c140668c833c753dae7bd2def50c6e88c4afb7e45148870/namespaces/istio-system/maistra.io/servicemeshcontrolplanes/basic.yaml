apiVersion: maistra.io/v2
kind: ServiceMeshControlPlane
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: '{"apiVersion":"maistra.io/v2","kind":"ServiceMeshControlPlane","metadata":{"name":"basic","namespace":"istio-system"},"spec":{"addons":{"grafana":{"enabled":true,"install":{}},"jaeger":{"install":{"ingress":{"enabled":true,"metadata":{"annotations":{},"labels":{}}},"storage":{"elasticsearch":{"indexCleaner":{"enabled":true,"numberOfDays":2,"schedule":"55
      23 * * *"},"nodeCount":3,"redundancyPolicy":"SingleRedundancy","storage":{"size":"50Gi","storageClassName":"gp2-csi"}},"type":"Elasticsearch"}},"name":"jaeger"},"kiali":{"enabled":true,"install":{"dashboard":{"enableGrafana":true,"enablePromethues":true,"enableTracing":true},"deployment":{},"service":{"ingress":{"contextPath":"/dashboards/kiali","enabled":true}}},"name":"kiali"},"prometheus":{"enabled":true}},"gateways":{"egress":{"enabled":true,"routerMode":"standard","runtime":{"container":{},"deployment":{"autoScaling":{"maxReplicas":10,"minReplicas":3,"targetCPUUtilizationPercentage":75},"replicas":3,"strategy":{}},"pod":{}},"volumes":[]},"enabled":true,"ingress":{"enabled":true,"ingress":true,"routeConfig":{"enabled":false},"routerMode":"sni-dnat","runtime":{"container":{},"deployment":{"autoScaling":{"maxReplicas":10,"minReplicas":3,"targetCPUUtilizationPercentage":75},"replicas":3,"strategy":{}},"pod":{}},"sds":{"enabled":true,"runtime":{}},"service":{"metadata":{"labels":{"app":"istio-ingressgateway","istio":"ingressgateway"},"name":"istio-ingressgateway"},"spec":{"ports":[{"name":"status-port","port":15021,"protocol":"TCP","targetPort":15021},{"name":"http2","port":80,"protocol":"TCP","targetPort":8080},{"name":"https","port":443,"protocol":"TCP","targetPort":8443}],"selector":{"app":"istio-ingressgateway","istio":"ingressgateway"},"type":"LoadBalancer"}},"volumes":[]},"openshiftRoute":{"enabled":false}},"general":{"logging":{"componentLevels":{},"logAsJSON":true},"validationMessages":true},"proxy":{"accessLogging":{"file":{"name":"/dev/stdout"}},"runtime":{"container":{"resources":{"requests":{"cpu":"50m","memory":"50Mi"}}}}},"runtime":{"components":{"grafana":{"container":{"resources":{"requests":{"cpu":"100m","memory":"256Mi"}}}},"kiali":{"container":{"resources":{"requests":{"cpu":"100m","memory":"256Mi"}}}},"prometheus":{"container":{"resources":{"requests":{"cpu":"100m","memory":"256Mi"}}}},"tracing.jaeger.collector":{"container":{"resources":{"requests":{"cpu":"100m","memory":"256Mi"}}}},"tracing.jaeger.elasticsearch":{"container":{"resources":{"limits":{"cpu":"1","memory":"4Gi"},"requests":{"cpu":"1","memory":"4Gi"}}}},"tracing.jaeger.query":{"container":{"resources":{"requests":{"cpu":"100m","memory":"256Mi"}}}}}},"security":{"controlPlane":{"mtls":true},"dataPlane":{"automtls":true,"mtls":true}},"tracing":{"type":"Jaeger"},"version":"v2.3"}}'
  creationTimestamp: "2023-03-24T17:28:09Z"
  finalizers:
  - maistra.io/istio-operator
  generation: 5
  name: basic
  namespace: istio-system
  resourceVersion: "1898463"
  uid: ea62ab37-de81-47cf-a7a3-ecf2986a0b2f
spec:
  addons:
    grafana:
      enabled: true
      install: {}
    jaeger:
      install:
        ingress:
          enabled: true
          metadata: {}
        storage:
          elasticsearch:
            indexCleaner:
              enabled: true
              numberOfDays: 2
              schedule: 55 23 * * *
            nodeCount: 3
            redundancyPolicy: SingleRedundancy
            storage:
              size: 50Gi
              storageClassName: gp2-csi
          type: Elasticsearch
      name: jaeger
    kiali:
      enabled: true
      install:
        dashboard:
          enableGrafana: true
          enableTracing: true
        deployment: {}
        service:
          ingress:
            contextPath: /dashboards/kiali
            enabled: true
      name: kiali
    prometheus:
      enabled: true
  gateways:
    egress:
      enabled: true
      routerMode: standard
      runtime:
        container: {}
        deployment:
          autoScaling:
            maxReplicas: 10
            minReplicas: 1
            targetCPUUtilizationPercentage: 75
          replicas: 1
          strategy: {}
        pod: {}
      service: {}
    enabled: true
    ingress:
      enabled: true
      ingress: true
      routeConfig:
        enabled: false
      routerMode: sni-dnat
      runtime:
        container: {}
        deployment:
          autoScaling:
            maxReplicas: 10
            minReplicas: 1
            targetCPUUtilizationPercentage: 75
          replicas: 1
          strategy: {}
        pod: {}
      sds:
        enabled: true
        runtime: {}
      service:
        metadata:
          labels:
            app: istio-ingressgateway
            istio: ingressgateway
    openshiftRoute:
      enabled: false
  general:
    logging:
      logAsJSON: true
    validationMessages: true
  profiles:
  - default
  proxy:
    accessLogging:
      file:
        name: /dev/stdout
    runtime:
      container:
        resources:
          requests:
            cpu: 50m
            memory: 50Mi
  runtime:
    components:
      grafana:
        container:
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
      kiali:
        container:
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
      prometheus:
        container:
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
      tracing.jaeger.collector:
        container:
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
      tracing.jaeger.elasticsearch:
        container:
          resources:
            limits:
              cpu: "1"
              memory: 4Gi
            requests:
              cpu: "1"
              memory: 4Gi
      tracing.jaeger.query:
        container:
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
  security:
    controlPlane:
      mtls: false
    dataPlane:
      automtls: false
      mtls: false
    jwksResolverCA: '-----BEGIN CERTIFICATE----- MIIDDDCCAfSgAwIBAgIBATANBgkqhkiG9w0BAQsFADAmMSQwIgYDVQQDDBtpbmdy
      ZXNzLW9wZXJhdG9yQDE2Nzk1NTI4NjAwHhcNMjMwMzIzMDYyNzQwWhcNMjUwMzIy MDYyNzQxWjAmMSQwIgYDVQQDDBtpbmdyZXNzLW9wZXJhdG9yQDE2Nzk1NTI4NjAw
      ggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCv48ucT1SXYqfpg7qM1Ofu Vx+y5SjjCwboaSS3EAZ5Wf9imD5ctrTUBTF/SioENYXT6WLXtZFEMn6oR1MsD3tC
      2Lib1MlGq1ffCXttsOVf2F6cGDe/5yQEQxB3lJ8b9cp6OL5w07Dvka/GE5B4NgaC 76G2shzF3T0atsUrfKOF35ewfgGK+LBMvqKwScENq8e+fv2R+GZTq4aRZzQ8By9A
      suq3EW12VOcX8B0ePWm1K2CZV8+/uBG4bpUnMJLdG8bSNVRYyfGgO1n1m8AcZXkY lvOaf3yZHaJBJH9R+tfJEULafJXIXDPgPcph/SslkyHiovUVMB4AcLYZo1vj1gLr
      AgMBAAGjRTBDMA4GA1UdDwEB/wQEAwICpDASBgNVHRMBAf8ECDAGAQH/AgEAMB0G A1UdDgQWBBQtRw6uKpRlxH2STkibnYdg29tHhjANBgkqhkiG9w0BAQsFAAOCAQEA
      H+FjXjOEbxb7+cYTML6NWvI7/vt25lBOfKSkvUzFvqYhKfKR1Zoo5Y0UfK4LATOZ kjqe8/HGAAUUrZPy1R7eP9hwMiWG0aBcLAwP02vlYZdbiNzSKNm+4CsgjpIE49x8
      lD5ZEG+xioNsP5uD83zqz1W2O0kjkppEbL3McoX+LHKFbTXq4C2zdfwOolQqDVEB B5kerkeglM97MtUKG4n0kItGufSWdvFixHCtsRBSukBVV8HkVRHUaH1SMy5IWAEh
      8gsN/fwoixTTNFEdHX4Op0bu4fSaKmPTNMmqN2Gu6MixWARBMKSigSnMOhVQXdKb hTje9z/OjnMPUwzqN5P+jQ==
      -----END CERTIFICATE-----'
  tracing:
    type: Jaeger
  version: v2.3
status:
  annotations:
    alwaysReadyComponents: mesh-config,telemetry-common,tracing,kiali
    readyComponentCount: 9/9
  appliedSpec:
    addons:
      grafana:
        enabled: true
        install:
          service:
            ingress:
              enabled: true
            metadata:
              annotations:
                service.alpha.openshift.io/serving-cert-secret-name: grafana-tls
      jaeger:
        install:
          ingress:
            enabled: true
          storage:
            elasticsearch:
              indexCleaner:
                enabled: true
                numberOfDays: 2
                schedule: 55 23 * * *
              nodeCount: 3
              redundancyPolicy: SingleRedundancy
              storage:
                size: 50Gi
                storageClassName: gp2-csi
            type: Elasticsearch
        name: jaeger
      kiali:
        enabled: true
        install:
          dashboard:
            enableGrafana: true
            enableTracing: true
            viewOnly: false
          service:
            ingress:
              contextPath: /dashboards/kiali
              enabled: true
        name: kiali
      prometheus:
        enabled: true
        install:
          service:
            ingress:
              enabled: true
            metadata:
              annotations:
                service.alpha.openshift.io/serving-cert-secret-name: prometheus-tls
    gateways:
      egress:
        enabled: true
        routerMode: standard
        runtime:
          container:
            resources:
              requests:
                cpu: 10m
                memory: 128Mi
          deployment:
            autoScaling:
              enabled: false
              maxReplicas: 10
              minReplicas: 1
              targetCPUUtilizationPercentage: 75
            replicas: 1
        service: {}
      enabled: true
      ingress:
        enabled: true
        ingress: true
        routeConfig:
          enabled: false
        routerMode: sni-dnat
        runtime:
          container:
            resources:
              requests:
                cpu: 10m
                memory: 128Mi
          deployment:
            autoScaling:
              enabled: false
              maxReplicas: 10
              minReplicas: 1
              targetCPUUtilizationPercentage: 75
            replicas: 1
        sds:
          enabled: true
        service:
          metadata:
            labels:
              app: istio-ingressgateway
              istio: ingressgateway
          type: ClusterIP
      openshiftRoute:
        enabled: false
    general:
      logging:
        componentLevels:
          default: warn
        logAsJSON: true
      validationMessages: true
    policy:
      type: None
    profiles:
    - default
    proxy:
      accessLogging:
        file:
          name: /dev/stdout
      injection:
        autoInject: false
      networking:
        dns:
          refreshRate: 300s
        initialization:
          initContainer:
            runtime:
              imageName: proxy-init-rhel7
        protocol:
          autoDetect:
            inbound: false
            outbound: false
      runtime:
        container:
          imageName: registry.redhat.io/openshift-service-mesh/proxyv2-rhel8@sha256:15444e6b93a05d88c6fc6ce1d1e7744635141291b86a7c3abb57758849a5d19e
          resources:
            requests:
              cpu: 50m
              memory: 50Mi
    runtime:
      components:
        3scale:
          container:
            imageRegistry: registry.redhat.io/openshift-service-mesh
            imageTag: 2.0.0
        global.oauthproxy:
          container:
            imageName: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f968922564c3eea1c69d6bbe529d8970784d6cae8935afaf674d9fa7c0f72ea3
            imagePullPolicy: IfNotPresent
            imageRegistry: registry.redhat.io/openshift4
            imageTag: v4.4
        grafana:
          container:
            imageName: registry.redhat.io/openshift-service-mesh/grafana-rhel8@sha256:6c4b1ec87fdb6259a9845ac8530b7a6ea249acc2ba205ed79a6aa9a639d1a18f
            resources:
              requests:
                cpu: 100m
                memory: 256Mi
        kiali:
          container:
            resources:
              requests:
                cpu: 100m
                memory: 256Mi
        pilot:
          container:
            imageName: registry.redhat.io/openshift-service-mesh/pilot-rhel8@sha256:daa1c9b3ffde151a2efb12a7a4bf4c9665dbd4a8be0490192c32a4e5532c0ad8
            resources:
              requests:
                cpu: 10m
                memory: 128Mi
          deployment:
            autoScaling:
              enabled: false
        prometheus:
          container:
            imageName: registry.redhat.io/openshift-service-mesh/prometheus-rhel8@sha256:39224efbb0d80d1f59c290046c981008926a0bce90be25542958045938b9dfcd
            resources:
              requests:
                cpu: 100m
                memory: 256Mi
        rateLimiting.rls:
          container:
            imageName: registry.redhat.io/openshift-service-mesh/ratelimit-rhel8@sha256:12aaa9c8c84214fbffbd6a0e193bb84b9ad6bb64ddecbe06e1700cd184218214
        tracing.jaeger.elasticsearch:
          container:
            resources:
              limits:
                cpu: "1"
                memory: 4Gi
              requests:
                cpu: "1"
                memory: 4Gi
      defaults:
        container:
          imageRegistry: registry.redhat.io/openshift-service-mesh
          imageTag: 2.3.2
          resources:
            requests:
              cpu: 10m
              memory: 128Mi
        deployment:
          podDisruption:
            enabled: false
    security:
      controlPlane:
        mtls: false
      dataPlane:
        automtls: false
        mtls: false
      identity:
        type: Kubernetes
      jwksResolverCA: '-----BEGIN CERTIFICATE----- MIIDDDCCAfSgAwIBAgIBATANBgkqhkiG9w0BAQsFADAmMSQwIgYDVQQDDBtpbmdy
        ZXNzLW9wZXJhdG9yQDE2Nzk1NTI4NjAwHhcNMjMwMzIzMDYyNzQwWhcNMjUwMzIy MDYyNzQxWjAmMSQwIgYDVQQDDBtpbmdyZXNzLW9wZXJhdG9yQDE2Nzk1NTI4NjAw
        ggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCv48ucT1SXYqfpg7qM1Ofu Vx+y5SjjCwboaSS3EAZ5Wf9imD5ctrTUBTF/SioENYXT6WLXtZFEMn6oR1MsD3tC
        2Lib1MlGq1ffCXttsOVf2F6cGDe/5yQEQxB3lJ8b9cp6OL5w07Dvka/GE5B4NgaC 76G2shzF3T0atsUrfKOF35ewfgGK+LBMvqKwScENq8e+fv2R+GZTq4aRZzQ8By9A
        suq3EW12VOcX8B0ePWm1K2CZV8+/uBG4bpUnMJLdG8bSNVRYyfGgO1n1m8AcZXkY lvOaf3yZHaJBJH9R+tfJEULafJXIXDPgPcph/SslkyHiovUVMB4AcLYZo1vj1gLr
        AgMBAAGjRTBDMA4GA1UdDwEB/wQEAwICpDASBgNVHRMBAf8ECDAGAQH/AgEAMB0G A1UdDgQWBBQtRw6uKpRlxH2STkibnYdg29tHhjANBgkqhkiG9w0BAQsFAAOCAQEA
        H+FjXjOEbxb7+cYTML6NWvI7/vt25lBOfKSkvUzFvqYhKfKR1Zoo5Y0UfK4LATOZ kjqe8/HGAAUUrZPy1R7eP9hwMiWG0aBcLAwP02vlYZdbiNzSKNm+4CsgjpIE49x8
        lD5ZEG+xioNsP5uD83zqz1W2O0kjkppEbL3McoX+LHKFbTXq4C2zdfwOolQqDVEB B5kerkeglM97MtUKG4n0kItGufSWdvFixHCtsRBSukBVV8HkVRHUaH1SMy5IWAEh
        8gsN/fwoixTTNFEdHX4Op0bu4fSaKmPTNMmqN2Gu6MixWARBMKSigSnMOhVQXdKb hTje9z/OjnMPUwzqN5P+jQ==
        -----END CERTIFICATE-----'
    techPreview:
      galley:
        enableAnalysis: true
      global:
        configNamespace: istio-system
        configRootNamespace: istio-system
        istioNamespace: istio-system
        prometheusNamespace: istio-system
      istio_cni:
        istio_cni_network: v2-3-istio-cni
      kiali:
        install: true
      meshConfig:
        defaultConfig:
          tracing:
            zipkin:
              address: jaeger-collector.istio-system.svc:9411
        ingressControllerMode: "OFF"
        rootNamespace: istio-system
      revision: basic
      sidecarInjectorWebhook:
        objectSelector:
          enabled: false
      tracing:
        jaeger:
          install: true
    telemetry:
      type: Istiod
    tracing:
      type: Jaeger
    version: v2.3
  appliedValues:
    istio:
      base:
        validationURL: ""
      clusterResources: true
      galley:
        enableAnalysis: true
      gateways:
        enabled: true
        istio-egressgateway:
          autoscaleEnabled: false
          autoscaleMax: 10
          autoscaleMin: 1
          cpu:
            targetAverageUtilization: 75
          enabled: true
          env:
            ISTIO_META_ROUTER_MODE: standard
          gatewayType: egress
          name: istio-egressgateway
          replicaCount: 1
          resources:
            requests:
              cpu: 10m
              memory: 128Mi
        istio-ingressgateway:
          autoscaleEnabled: false
          autoscaleMax: 10
          autoscaleMin: 1
          cpu:
            targetAverageUtilization: 75
          enabled: true
          env:
            ISTIO_META_ROUTER_MODE: sni-dnat
          gatewayType: ingress
          ior_enabled: false
          labels:
            app: istio-ingressgateway
            istio: ingressgateway
          name: istio-ingressgateway
          replicaCount: 1
          resources:
            requests:
              cpu: 10m
              memory: 128Mi
          routeConfig:
            enabled: false
          sds:
            enabled: true
          type: ClusterIP
      global:
        arch:
          amd64: 2
          ppc64le: 2
          s390x: 2
        caAddress: ""
        centralIstiod: false
        configNamespace: istio-system
        configRootNamespace: istio-system
        configValidation: true
        controlPlaneSecurityEnabled: false
        defaultConfigVisibilitySettings: []
        defaultNodeSelector: {}
        defaultPodDisruptionBudget:
          enabled: false
        defaultResources:
          requests:
            cpu: 10m
            memory: 128Mi
        defaultTolerations: []
        enableTracing: true
        externalIstiod: false
        hub: registry.redhat.io/openshift-service-mesh
        imagePullPolicy: ""
        imagePullSecrets: []
        istioNamespace: istio-system
        istiod:
          enableAnalysis: true
        jwtPolicy: first-party-jwt
        k8sIngress:
          enableHttps: false
          enabled: true
          gatewayName: ingressgateway
        logAsJson: true
        logging:
          level: default:warn
        manageNetworkPolicy: true
        meshExpansion:
          enabled: false
          useILB: false
        meshID: ""
        meshNetworks: {}
        mountMtlsCerts: false
        mtls:
          auto: false
          enabled: false
        multiCluster:
          clusterName: ""
          enabled: false
          globalDomainSuffix: global
          includeEnvoyFilter: true
          multiClusterOverrides:
            expansionEnabled: null
            multiClusterEnabled: null
        network: ""
        oauthproxy:
          hub: registry.redhat.io/openshift4
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f968922564c3eea1c69d6bbe529d8970784d6cae8935afaf674d9fa7c0f72ea3
          imagePullPolicy: IfNotPresent
          tag: v4.4
        omitSidecarInjectorConfigMap: false
        oneNamespace: false
        operatorManageWebhooks: false
        pilotCertProvider: istiod
        priorityClassName: ""
        prometheusNamespace: istio-system
        proxy:
          accessLogFile: /dev/stdout
          autoInject: disabled
          clusterDomain: cluster.local
          componentLogLevel: misc:error
          dnsRefreshRate: 300s
          enableCoreDump: false
          excludeIPRanges: ""
          excludeInboundPorts: ""
          excludeOutboundPorts: ""
          image: registry.redhat.io/openshift-service-mesh/proxyv2-rhel8@sha256:15444e6b93a05d88c6fc6ce1d1e7744635141291b86a7c3abb57758849a5d19e
          includeIPRanges: '*'
          includeInboundPorts: '*'
          logLevel: warning
          privileged: false
          readinessFailureThreshold: 30
          readinessInitialDelaySeconds: 1
          readinessPeriodSeconds: 2
          resources:
            limits:
              cpu: 2000m
              memory: 1024Mi
            requests:
              cpu: 50m
              memory: 50Mi
          statusPort: 15021
          tracer: zipkin
        proxy_init:
          image: proxy-init-rhel7
          resources:
            limits:
              cpu: 2000m
              memory: 1024Mi
            requests:
              cpu: 10m
              memory: 10Mi
        remotePilotAddress: ""
        sds:
          token:
            aud: istio-ca
        sts:
          servicePort: 0
        tag: 2.3.2
        tls:
          cipherSuites: []
          ecdhCurves: []
          maxProtocolVersion: ""
          minProtocolVersion: ""
        tracer:
          datadog:
            address: $(HOST_IP):8126
          lightstep:
            accessToken: ""
            address: ""
          stackdriver:
            debug: false
            maxNumberOfAnnotations: 200
            maxNumberOfAttributes: 200
            maxNumberOfMessageEvents: 200
          zipkin:
            address: ""
        trustDomain: ""
        useMCP: false
      grafana:
        enabled: true
        image: registry.redhat.io/openshift-service-mesh/grafana-rhel8@sha256:6c4b1ec87fdb6259a9845ac8530b7a6ea249acc2ba205ed79a6aa9a639d1a18f
        ingress:
          enabled: true
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
        service:
          annotations:
            service.alpha.openshift.io/serving-cert-secret-name: grafana-tls
      istio_cni:
        enabled: true
        istio_cni_network: v2-3-istio-cni
      kiali:
        contextPath: /dashboards/kiali
        dashboard:
          enableGrafana: true
          enableTracing: true
          viewOnlyMode: false
        enabled: true
        ingress:
          contextPath: /dashboards/kiali
          enabled: true
        install: true
        resourceName: kiali
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
      meshConfig:
        accessLogFile: /dev/stdout
        defaultConfig:
          proxyMetadata:
            ISTIO_META_DNS_AUTO_ALLOCATE: "true"
            ISTIO_META_DNS_CAPTURE: "true"
            PROXY_XDS_VIA_AGENT: "true"
          tracing:
            zipkin:
              address: jaeger-collector.istio-system.svc:9411
        dnsRefreshRate: 300s
        enableAutoMtls: false
        enablePrometheusMerge: true
        enableTracing: true
        ingressControllerMode: "OFF"
        rootNamespace: istio-system
      mixer:
        adapters:
          prometheus:
            enabled: true
        policy:
          enabled: false
        telemetry:
          enabled: false
      pilot:
        autoscaleEnabled: false
        enableProtocolSniffingForInbound: false
        enableProtocolSniffingForOutbound: false
        image: registry.redhat.io/openshift-service-mesh/pilot-rhel8@sha256:daa1c9b3ffde151a2efb12a7a4bf4c9665dbd4a8be0490192c32a4e5532c0ad8
        jwksResolverExtraRootCA: '-----BEGIN CERTIFICATE----- MIIDDDCCAfSgAwIBAgIBATANBgkqhkiG9w0BAQsFADAmMSQwIgYDVQQDDBtpbmdy
          ZXNzLW9wZXJhdG9yQDE2Nzk1NTI4NjAwHhcNMjMwMzIzMDYyNzQwWhcNMjUwMzIy MDYyNzQxWjAmMSQwIgYDVQQDDBtpbmdyZXNzLW9wZXJhdG9yQDE2Nzk1NTI4NjAw
          ggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCv48ucT1SXYqfpg7qM1Ofu Vx+y5SjjCwboaSS3EAZ5Wf9imD5ctrTUBTF/SioENYXT6WLXtZFEMn6oR1MsD3tC
          2Lib1MlGq1ffCXttsOVf2F6cGDe/5yQEQxB3lJ8b9cp6OL5w07Dvka/GE5B4NgaC 76G2shzF3T0atsUrfKOF35ewfgGK+LBMvqKwScENq8e+fv2R+GZTq4aRZzQ8By9A
          suq3EW12VOcX8B0ePWm1K2CZV8+/uBG4bpUnMJLdG8bSNVRYyfGgO1n1m8AcZXkY lvOaf3yZHaJBJH9R+tfJEULafJXIXDPgPcph/SslkyHiovUVMB4AcLYZo1vj1gLr
          AgMBAAGjRTBDMA4GA1UdDwEB/wQEAwICpDASBgNVHRMBAf8ECDAGAQH/AgEAMB0G A1UdDgQWBBQtRw6uKpRlxH2STkibnYdg29tHhjANBgkqhkiG9w0BAQsFAAOCAQEA
          H+FjXjOEbxb7+cYTML6NWvI7/vt25lBOfKSkvUzFvqYhKfKR1Zoo5Y0UfK4LATOZ kjqe8/HGAAUUrZPy1R7eP9hwMiWG0aBcLAwP02vlYZdbiNzSKNm+4CsgjpIE49x8
          lD5ZEG+xioNsP5uD83zqz1W2O0kjkppEbL3McoX+LHKFbTXq4C2zdfwOolQqDVEB B5kerkeglM97MtUKG4n0kItGufSWdvFixHCtsRBSukBVV8HkVRHUaH1SMy5IWAEh
          8gsN/fwoixTTNFEdHX4Op0bu4fSaKmPTNMmqN2Gu6MixWARBMKSigSnMOhVQXdKb hTje9z/OjnMPUwzqN5P+jQ==
          -----END CERTIFICATE-----'
        resources:
          requests:
            cpu: 10m
            memory: 128Mi
      policy:
        implementation: None
      prometheus:
        enabled: true
        image: registry.redhat.io/openshift-service-mesh/prometheus-rhel8@sha256:39224efbb0d80d1f59c290046c981008926a0bce90be25542958045938b9dfcd
        ingress:
          enabled: true
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
        service:
          annotations:
            service.alpha.openshift.io/serving-cert-secret-name: prometheus-tls
      rateLimiting:
        rls:
          image: registry.redhat.io/openshift-service-mesh/ratelimit-rhel8@sha256:12aaa9c8c84214fbffbd6a0e193bb84b9ad6bb64ddecbe06e1700cd184218214
      revision: basic
      sidecarInjectorWebhook:
        enableNamespacesByDefault: false
        objectSelector:
          enabled: false
      telemetry:
        enabled: true
        implementation: Istiod
        v1:
          enabled: false
        v2:
          accessLogPolicy:
            enabled: false
            logWindowDuration: 43200s
          enabled: true
          metadataExchange:
            wasmEnabled: false
          prometheus:
            configOverride:
              gateway: {}
              inboundSidecar: {}
              outboundSidecar: {}
            enabled: true
            wasmEnabled: false
          stackdriver:
            configOverride: {}
            disableOutbound: false
            enabled: false
            logging: false
            monitoring: false
            topology: false
      tracing:
        enabled: true
        ingress:
          enabled: true
        jaeger:
          elasticsearch:
            nodeCount: 3
            redundancyPolicy: SingleRedundancy
            resources:
              limits:
                cpu: "1"
                memory: 4Gi
              requests:
                cpu: "1"
                memory: 4Gi
            storage:
              size: 50Gi
              storageClassName: gp2-csi
          esIndexCleaner:
            enabled: true
            numberOfDays: 2
            schedule: 55 23 * * *
          install: true
          resourceName: jaeger
          template: production-elasticsearch
        provider: jaeger
    profiles:
    - default
    template: default
    threeScale:
      hub: registry.redhat.io/openshift-service-mesh
      image: ""
      tag: 2.0.0
    version: v2.3
  chartVersion: 2.3.2
  components:
  - conditions:
    - lastTransitionTime: "2023-03-24T18:24:23Z"
      message: Successfully reconciled
      reason: ReconcileSuccessful
      status: "True"
      type: Reconciled
    - lastTransitionTime: "2023-03-24T17:28:10Z"
      message: Component installed successfully
      reason: InstallSuccessful
      status: "True"
      type: Installed
    resource: istio-discovery
  - conditions:
    - lastTransitionTime: "2023-03-24T18:24:26Z"
      message: Successfully reconciled
      reason: ReconcileSuccessful
      status: "True"
      type: Reconciled
    - lastTransitionTime: "2023-03-24T17:28:13Z"
      message: Component installed successfully
      reason: InstallSuccessful
      status: "True"
      type: Installed
    resource: mesh-config
  - conditions:
    - lastTransitionTime: "2023-03-24T18:24:26Z"
      message: Successfully reconciled
      reason: ReconcileSuccessful
      status: "True"
      type: Reconciled
    - lastTransitionTime: "2023-03-24T17:28:13Z"
      message: Component installed successfully
      reason: InstallSuccessful
      status: "True"
      type: Installed
    resource: telemetry-common
  - conditions:
    - lastTransitionTime: "2023-03-24T18:24:26Z"
      message: Successfully reconciled
      reason: ReconcileSuccessful
      status: "True"
      type: Reconciled
    - lastTransitionTime: "2023-03-24T17:28:13Z"
      message: Component installed successfully
      reason: InstallSuccessful
      status: "True"
      type: Installed
    resource: prometheus
  - conditions:
    - lastTransitionTime: "2023-03-24T18:24:28Z"
      message: Successfully reconciled
      reason: ReconcileSuccessful
      status: "True"
      type: Reconciled
    - lastTransitionTime: "2023-03-24T17:28:23Z"
      message: Component installed successfully
      reason: InstallSuccessful
      status: "True"
      type: Installed
    resource: tracing
  - conditions:
    - lastTransitionTime: "2023-03-24T18:24:28Z"
      message: Successfully reconciled
      reason: ReconcileSuccessful
      status: "True"
      type: Reconciled
    - lastTransitionTime: "2023-03-24T17:28:23Z"
      message: Component installed successfully
      reason: InstallSuccessful
      status: "True"
      type: Installed
    resource: istio-ingress
  - conditions:
    - lastTransitionTime: "2023-03-24T18:24:28Z"
      message: Successfully reconciled
      reason: ReconcileSuccessful
      status: "True"
      type: Reconciled
    - lastTransitionTime: "2023-03-24T17:28:23Z"
      message: Component installed successfully
      reason: InstallSuccessful
      status: "True"
      type: Installed
    resource: istio-egress
  - conditions:
    - lastTransitionTime: "2023-03-24T18:24:29Z"
      message: Successfully reconciled
      reason: ReconcileSuccessful
      status: "True"
      type: Reconciled
    - lastTransitionTime: "2023-03-24T17:28:23Z"
      message: Component installed successfully
      reason: InstallSuccessful
      status: "True"
      type: Installed
    resource: grafana
  - conditions:
    - lastTransitionTime: "2023-03-24T18:24:31Z"
      message: Successfully reconciled
      reason: ReconcileSuccessful
      status: "True"
      type: Reconciled
    - lastTransitionTime: "2023-03-24T17:28:26Z"
      message: Component installed successfully
      reason: InstallSuccessful
      status: "True"
      type: Installed
    resource: kiali
  conditions:
  - lastTransitionTime: "2023-03-24T17:28:32Z"
    message: Successfully installed all mesh components
    reason: InstallSuccessful
    status: "True"
    type: Installed
  - lastTransitionTime: "2023-03-24T18:24:36Z"
    message: Successfully updated from version 2.3.2-1-4 to version 2.3.2-1-5
    reason: UpdateSuccessful
    status: "True"
    type: Reconciled
  - lastTransitionTime: "2023-03-26T08:24:15Z"
    message: All component deployments are Available
    reason: ComponentsReady
    status: "True"
    type: Ready
  observedGeneration: 5
  operatorVersion: 2.3.2-1
  readiness:
    components:
      pending: []
      ready:
      - grafana
      - istio-discovery
      - istio-egress
      - istio-ingress
      - kiali
      - mesh-config
      - prometheus
      - telemetry-common
      - tracing
      unready: []
